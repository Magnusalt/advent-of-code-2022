#!markdown

Read input from files

#!csharp

#!value --from-file input1.txt --name input1
#!value --from-file input2.txt --name input2

#!markdown

Helpers

#!csharp

using System.Linq;

int[] ParseInput(string[] raw){
    return raw.Select(v=> int.Parse(v)).ToArray();
}

int[] ParseInput(string raw){
    return ParseInput(raw.Split('\n')).ToArray();
}

string[] GetLines(string input){
  return input.Split("\r\n");  
}

#!markdown

Day 1 part 1

#!csharp

#!share input1 --from value

var day1 = input1.Split("\r\n");
var most = 0;
var current = 0;
foreach(var cal in day1)
{
    if(string.IsNullOrEmpty(cal))
    {
        most = current > most ? current : most;
        current = 0;
    }
    else
    {
        current += int.Parse(cal);
    }
}
most

#!markdown

Day 1 part 2

#!csharp

#!share input1 --from value

var day1 = input1.Split("\r\n");
var most = new int[]{0,0,0};
var current = 0;
foreach(var cal in day1)
{
    if(string.IsNullOrEmpty(cal))
    {
        for(var i = 0; i < 3; i++)
        {
            if(current > most[i])
            {
                most[i] = current;
                break;
            }
        }
        current = 0;
    }
    else
    {
        current += int.Parse(cal);
    }
}
most.Sum()

#!markdown

Day 2 part 1

#!csharp

#!share input2 --from value

var input = GetLines(input2);

var res = input.Aggregate(0, (sum, next) =>{
    return sum + next switch {
        "A X" => 1+3,
        "A Y" => 2+6,
        "A Z" => 3+0,
        "B X" => 1+0,
        "B Y" => 2+3,
        "B Z" => 3+6,
        "C X" => 1+6,
        "C Y" => 2+0,
        "C Z" => 3+3,
        _ => throw new ArgumentOutOfRangeException($"{next} is invalid")
    };
});

res

#!markdown

Day 2 part 2

#!csharp

#!share input2 --from value

var input = GetLines(input2);

var res = input.Aggregate(0, (sum, next) =>{
    return sum + next switch {
        "A X" => 3+0,
        "A Y" => 1+3,
        "A Z" => 2+6,
        "B X" => 1+0,
        "B Y" => 2+3,
        "B Z" => 3+6,
        "C X" => 2+0,
        "C Y" => 3+3,
        "C Z" => 1+6,
    };
});

res

#!javascript

#!js
#!share input2 --from value

var input = input2.split("\r\n");
var rules = {        
    "A X" : 3+0,
    "A Y" : 1+3,
    "A Z" : 2+6,
    "B X" : 1+0,
    "B Y" : 2+3,
    "B Z" : 3+6,
    "C X" : 2+0,
    "C Y" : 3+3,
    "C Z" : 1+6,
};
var result = input.reduce((sum, next) =>sum + rules[next], 0);
console.log(result)
